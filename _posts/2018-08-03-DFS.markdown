---
layout: post
title:  "DFS"
date:   2018-08-03 18:07:00
categories: algorithm
tags: featured
image: /assets/article_images/2014-08-29-welcome-to-jekyll/desktop.JPG
comments: true
---


### **알고리즘 2주차 스터디 정리**



**1. DFS 정의**

깊이우선탐색이란 그래프를 탐색하는 알고리즘 중 하나의 종류이다.특정 노드를 출발하여 깊게 들어 갈 수 있을 때까지 들어가고 들어 갈 곳이 없다면 다시 나오는 알고리즘이다. FILO,  LIFO 라는 특성을 가지고 있기에 DFS 알고리즘을 구현할때는 보통 스택 또는 재귀 호출 방법을 사용한다.



**2. DFS 특징**

- **장점 :**

  - 단지 현 경로상의 노드들만을 기억하면 되므로 저장 공간의 수요가 비교적 적다.
  - 목표 노드가 깊은 단계에 있을 경우 해를 빨리 구할 수 있다.

- ##### 단점 :

  - 해가 없는 경로에 깊이 빠질 가능성이 있다. 따라서 실제로는 미리 지정한 임의 깊이까지만 탐색하고 목표 노드를 발견하지 못하면 다음 경로를 따라 탐색하는 방법이 유용할 수 있다.
  - 얻어진 해가 최단 경로가 된다면 보장이 없다. 이는 목표에 이르는 경로가 다수인 문제에 대해 DFS는 해에 다다르면 탐색을 끝내버리므로, 이때 얻어진 해는 최적이 아닐 수 있다는 의미이다.**



**3. DFS 기타**  

![](https://user-images.githubusercontent.com/20294786/43650343-7ac85728-977a-11e8-8ac8-59c841c6e1af.png)



##### DFS 탐색 순서

![](https://user-images.githubusercontent.com/20294786/43650459-caa80b1c-977a-11e8-8a19-b5d129254370.png)



![](https://user-images.githubusercontent.com/20294786/43650489-dd224ab4-977a-11e8-848a-0e2c400ae9c9.png)


